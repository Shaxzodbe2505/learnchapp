import sys
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QLabel, QPushButton, QScrollArea
from PyQt5.QtGui import QFont, QPixmap, QIcon, QPalette, QBrush
from PyQt5.QtCore import Qt

class IntroductionWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle('Muhandislik Grafikasi')
        self.setGeometry(0, 0, 1920, 1080)
        self.setStyleSheet("background-color: #1e1e1e; color: #ffffff;")
        self.setWindowIcon(QIcon('images/technical-drawing.ico'))



        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()
        # Asosiy panel uchun palitra
        palette = QPalette()
        palette.setBrush(QPalette.Window, QBrush(QPixmap("images/introbg.jpg")))
        self.setPalette(palette)


        # ScrollArea yaratish (ko'proq ma'lumot ko'rsatish uchun)
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setStyleSheet("border: none;")

        content_widget = QWidget()
        content_layout = QVBoxLayout()

        # Muhandislik Grafikasi haqida matn
        text = f"""
        Muhandislik grafikasi fani haqida umumiy ma'lumot

Muhandislik grafikasi â€” umumiy geometriyaning bir boâ€˜limi boâ€˜lib, u narsalarning geometrik xususiyatlariga asoslanib, ularning shakllari, oâ€˜lchamlari va oâ€˜zaro joylashishini tasvirlash usullari orqali oâ€˜rganadi. Bu fan pozitsion, metrik va konstruktiv masalalarni yechish algoritmlarini oâ€˜rgatadi.

Muhandislik grafikasi orqali talabaning fazoviy tasavvurlari kengayadi, tasvirlarni yasash va oldindan yasalgan chizmalarni oâ€˜qiy bilish koâ€˜nikmasi shakllanadi. Muhandislik grafikasi qonunlari asosida nafaqat mavjud narsalar, balki tasavvurdagi obâ€™ektlar ham tasvirlanadi. Bu esa yangilik va ixtirolarni amalga oshirishga asos boâ€˜ladi.

ðŸ“Œ Muhandislik grafikasining asosiy mazmuni 
Fazodagi figuralarning tekislikda tasvirlarini yasash usullarini yaratish va tahlil qilish.
Figuralarning berilgan tasvirlariga asoslanib, unga oid fazoviy masalalarni yechish va tekshirish usullarini oâ€˜rganish.
Muhandislik grafikasi qonunlari asosida buyumlarning tekislikdagi chizmalari hosil qilinadi. Bu orqali buyumning shakli, oâ€˜lchamlari va joylashuvi haqida toâ€˜liq tasavvur qilish mumkin boâ€˜ladi.

ðŸ“Œ Muhandislik grafikasi va tarixiy yutuqlar
Texnikaning rivojlanishida oâ€˜rta osiyolik olimlarning hissasi katta boâ€˜lgan. Masalan, Abu Ali ibn Sino tomonidan ishlab chiqilgan yuk koâ€˜targich mexanizmi bunga yorqin misol boâ€˜la oladi. Tarixiy yutuqlarni zamonaviy texnik taraqqiyot bilan uygâ€˜unlashtirish intellektual salohiyatli kadrlar tayyorlashning asosiy omillaridan biridir.

ðŸ“Œ Ta'lim jarayonidagi ahamiyati
Oâ€˜zbekistonda taâ€™lim sohasidagi islohotlar shaxs manfaatlari va taâ€™lim ustuvorligi asosiga qurilgan. Shu sababli, muhandislik grafikasi fanini oâ€˜qitishda DTS (Davlat Taâ€™lim Standarti) talablariga muvofiq bilim, koâ€˜nikma va malakalarni shakllantirishga alohida eâ€™tibor qaratilmoqda.

Talabalar semestr davomida muhandislik grafikasi fanidan 8 ta hisob-grafik vazifani bajaradilar. Joriy nazorat uchun 20 ball ajratilgan boâ€˜lib, har bir grafik masalaga 2,5 ball belgilangan. Grafik masalalarning mazmuni, formati va topshirish muddati fan dasturida aniq koâ€˜rsatilgan.

Muhandislik grafikasi fanini oâ€˜qitishda talabalarning nazariy bilimlari va amaliy koâ€˜nikmalarini mustahkamlash uchun maxsus metodik tavsiyalar ishlab chiqilgan. Talabalar grafik masalalarni bajarish orqali nafaqat bilim va koâ€˜nikmalarni rivojlantiradi, balki muhandislik fikrlash qobiliyatini ham shakllantiradi. âœ…
        """

        text_label = QLabel(text)
        text_label.setFont(QFont('Arial', 14))
        text_label.setStyleSheet("color: #ffffff;")
        text_label.setWordWrap(True)
        text_label.setAlignment(Qt.AlignTop)

        content_layout.addWidget(text_label)

        # Rasmni qo'shish
        image = QPixmap("images/1616092917782_MGkMv7y.jpg")  # Rasm fayl nomini moslab o'zgartiring
        image_label = QLabel()
        image_label.setPixmap(image.scaled(500, 400, Qt.KeepAspectRatio, Qt.SmoothTransformation))
        image_label.setAlignment(Qt.AlignCenter)

        content_layout.addWidget(image_label)

        content_widget.setLayout(content_layout)
        scroll_area.setWidget(content_widget)

        layout.addWidget(scroll_area)

        # Chiqish tugmasi
        close_button = QPushButton("Orqaga")
        close_button.setFont(QFont('Arial', 14))
        close_button.setStyleSheet("""
            QPushButton {
                background-color: #6a0dad;
                color: #ffffff;
                padding: 8px;
                border-radius: 5px;
            }
            QPushButton:hover {
                background-color: #7b1fa2;
            }
        """)
        close_button.clicked.connect(self.close)

        layout.addWidget(close_button, alignment=Qt.AlignCenter)

        self.setLayout(layout)

def main():
    app = QApplication(sys.argv)
    window = IntroductionWindow()
    window.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
